// Code generated by mockery v2.36.1. DO NOT EDIT.

package v1

import (
	context "context"

	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"

	v1 "github.com/authzed/authzed-go/proto/authzed/api/v1"
)

// MockExperimentalServiceClient is an autogenerated mock type for the ExperimentalServiceClient type
type MockExperimentalServiceClient struct {
	mock.Mock
}

type MockExperimentalServiceClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockExperimentalServiceClient) EXPECT() *MockExperimentalServiceClient_Expecter {
	return &MockExperimentalServiceClient_Expecter{mock: &_m.Mock}
}

// BulkCheckPermission provides a mock function with given fields: ctx, in, opts
func (_m *MockExperimentalServiceClient) BulkCheckPermission(ctx context.Context, in *v1.BulkCheckPermissionRequest, opts ...grpc.CallOption) (*v1.BulkCheckPermissionResponse, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, in)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *v1.BulkCheckPermissionResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.BulkCheckPermissionRequest, ...grpc.CallOption) (*v1.BulkCheckPermissionResponse, error)); ok {
		return rf(ctx, in, opts...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *v1.BulkCheckPermissionRequest, ...grpc.CallOption) *v1.BulkCheckPermissionResponse); ok {
		r0 = rf(ctx, in, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.BulkCheckPermissionResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *v1.BulkCheckPermissionRequest, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, in, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockExperimentalServiceClient_BulkCheckPermission_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BulkCheckPermission'
type MockExperimentalServiceClient_BulkCheckPermission_Call struct {
	*mock.Call
}

// BulkCheckPermission is a helper method to define mock.On call
//   - ctx context.Context
//   - in *v1.BulkCheckPermissionRequest
//   - opts ...grpc.CallOption
func (_e *MockExperimentalServiceClient_Expecter) BulkCheckPermission(ctx interface{}, in interface{}, opts ...interface{}) *MockExperimentalServiceClient_BulkCheckPermission_Call {
	return &MockExperimentalServiceClient_BulkCheckPermission_Call{Call: _e.mock.On("BulkCheckPermission",
		append([]interface{}{ctx, in}, opts...)...)}
}

func (_c *MockExperimentalServiceClient_BulkCheckPermission_Call) Run(run func(ctx context.Context, in *v1.BulkCheckPermissionRequest, opts ...grpc.CallOption)) *MockExperimentalServiceClient_BulkCheckPermission_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]grpc.CallOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(grpc.CallOption)
			}
		}
		run(args[0].(context.Context), args[1].(*v1.BulkCheckPermissionRequest), variadicArgs...)
	})
	return _c
}

func (_c *MockExperimentalServiceClient_BulkCheckPermission_Call) Return(_a0 *v1.BulkCheckPermissionResponse, _a1 error) *MockExperimentalServiceClient_BulkCheckPermission_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockExperimentalServiceClient_BulkCheckPermission_Call) RunAndReturn(run func(context.Context, *v1.BulkCheckPermissionRequest, ...grpc.CallOption) (*v1.BulkCheckPermissionResponse, error)) *MockExperimentalServiceClient_BulkCheckPermission_Call {
	_c.Call.Return(run)
	return _c
}

// BulkExportRelationships provides a mock function with given fields: ctx, in, opts
func (_m *MockExperimentalServiceClient) BulkExportRelationships(ctx context.Context, in *v1.BulkExportRelationshipsRequest, opts ...grpc.CallOption) (v1.ExperimentalService_BulkExportRelationshipsClient, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, in)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 v1.ExperimentalService_BulkExportRelationshipsClient
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.BulkExportRelationshipsRequest, ...grpc.CallOption) (v1.ExperimentalService_BulkExportRelationshipsClient, error)); ok {
		return rf(ctx, in, opts...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *v1.BulkExportRelationshipsRequest, ...grpc.CallOption) v1.ExperimentalService_BulkExportRelationshipsClient); ok {
		r0 = rf(ctx, in, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.ExperimentalService_BulkExportRelationshipsClient)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *v1.BulkExportRelationshipsRequest, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, in, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockExperimentalServiceClient_BulkExportRelationships_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BulkExportRelationships'
type MockExperimentalServiceClient_BulkExportRelationships_Call struct {
	*mock.Call
}

// BulkExportRelationships is a helper method to define mock.On call
//   - ctx context.Context
//   - in *v1.BulkExportRelationshipsRequest
//   - opts ...grpc.CallOption
func (_e *MockExperimentalServiceClient_Expecter) BulkExportRelationships(ctx interface{}, in interface{}, opts ...interface{}) *MockExperimentalServiceClient_BulkExportRelationships_Call {
	return &MockExperimentalServiceClient_BulkExportRelationships_Call{Call: _e.mock.On("BulkExportRelationships",
		append([]interface{}{ctx, in}, opts...)...)}
}

func (_c *MockExperimentalServiceClient_BulkExportRelationships_Call) Run(run func(ctx context.Context, in *v1.BulkExportRelationshipsRequest, opts ...grpc.CallOption)) *MockExperimentalServiceClient_BulkExportRelationships_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]grpc.CallOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(grpc.CallOption)
			}
		}
		run(args[0].(context.Context), args[1].(*v1.BulkExportRelationshipsRequest), variadicArgs...)
	})
	return _c
}

func (_c *MockExperimentalServiceClient_BulkExportRelationships_Call) Return(_a0 v1.ExperimentalService_BulkExportRelationshipsClient, _a1 error) *MockExperimentalServiceClient_BulkExportRelationships_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockExperimentalServiceClient_BulkExportRelationships_Call) RunAndReturn(run func(context.Context, *v1.BulkExportRelationshipsRequest, ...grpc.CallOption) (v1.ExperimentalService_BulkExportRelationshipsClient, error)) *MockExperimentalServiceClient_BulkExportRelationships_Call {
	_c.Call.Return(run)
	return _c
}

// BulkImportRelationships provides a mock function with given fields: ctx, opts
func (_m *MockExperimentalServiceClient) BulkImportRelationships(ctx context.Context, opts ...grpc.CallOption) (v1.ExperimentalService_BulkImportRelationshipsClient, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 v1.ExperimentalService_BulkImportRelationshipsClient
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, ...grpc.CallOption) (v1.ExperimentalService_BulkImportRelationshipsClient, error)); ok {
		return rf(ctx, opts...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, ...grpc.CallOption) v1.ExperimentalService_BulkImportRelationshipsClient); ok {
		r0 = rf(ctx, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.ExperimentalService_BulkImportRelationshipsClient)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockExperimentalServiceClient_BulkImportRelationships_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BulkImportRelationships'
type MockExperimentalServiceClient_BulkImportRelationships_Call struct {
	*mock.Call
}

// BulkImportRelationships is a helper method to define mock.On call
//   - ctx context.Context
//   - opts ...grpc.CallOption
func (_e *MockExperimentalServiceClient_Expecter) BulkImportRelationships(ctx interface{}, opts ...interface{}) *MockExperimentalServiceClient_BulkImportRelationships_Call {
	return &MockExperimentalServiceClient_BulkImportRelationships_Call{Call: _e.mock.On("BulkImportRelationships",
		append([]interface{}{ctx}, opts...)...)}
}

func (_c *MockExperimentalServiceClient_BulkImportRelationships_Call) Run(run func(ctx context.Context, opts ...grpc.CallOption)) *MockExperimentalServiceClient_BulkImportRelationships_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]grpc.CallOption, len(args)-1)
		for i, a := range args[1:] {
			if a != nil {
				variadicArgs[i] = a.(grpc.CallOption)
			}
		}
		run(args[0].(context.Context), variadicArgs...)
	})
	return _c
}

func (_c *MockExperimentalServiceClient_BulkImportRelationships_Call) Return(_a0 v1.ExperimentalService_BulkImportRelationshipsClient, _a1 error) *MockExperimentalServiceClient_BulkImportRelationships_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockExperimentalServiceClient_BulkImportRelationships_Call) RunAndReturn(run func(context.Context, ...grpc.CallOption) (v1.ExperimentalService_BulkImportRelationshipsClient, error)) *MockExperimentalServiceClient_BulkImportRelationships_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockExperimentalServiceClient creates a new instance of MockExperimentalServiceClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockExperimentalServiceClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockExperimentalServiceClient {
	mock := &MockExperimentalServiceClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
