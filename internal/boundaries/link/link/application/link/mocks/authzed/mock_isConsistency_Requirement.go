// Code generated by mockery v2.36.1. DO NOT EDIT.

package v1

import mock "github.com/stretchr/testify/mock"

// MockisConsistency_Requirement is an autogenerated mock type for the isConsistency_Requirement type
type MockisConsistency_Requirement struct {
	mock.Mock
}

type MockisConsistency_Requirement_Expecter struct {
	mock *mock.Mock
}

func (_m *MockisConsistency_Requirement) EXPECT() *MockisConsistency_Requirement_Expecter {
	return &MockisConsistency_Requirement_Expecter{mock: &_m.Mock}
}

// isConsistency_Requirement provides a mock function with given fields:
func (_m *MockisConsistency_Requirement) isConsistency_Requirement() {
	_m.Called()
}

// MockisConsistency_Requirement_isConsistency_Requirement_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isConsistency_Requirement'
type MockisConsistency_Requirement_isConsistency_Requirement_Call struct {
	*mock.Call
}

// isConsistency_Requirement is a helper method to define mock.On call
func (_e *MockisConsistency_Requirement_Expecter) isConsistency_Requirement() *MockisConsistency_Requirement_isConsistency_Requirement_Call {
	return &MockisConsistency_Requirement_isConsistency_Requirement_Call{Call: _e.mock.On("isConsistency_Requirement")}
}

func (_c *MockisConsistency_Requirement_isConsistency_Requirement_Call) Run(run func()) *MockisConsistency_Requirement_isConsistency_Requirement_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockisConsistency_Requirement_isConsistency_Requirement_Call) Return() *MockisConsistency_Requirement_isConsistency_Requirement_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockisConsistency_Requirement_isConsistency_Requirement_Call) RunAndReturn(run func()) *MockisConsistency_Requirement_isConsistency_Requirement_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockisConsistency_Requirement creates a new instance of MockisConsistency_Requirement. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockisConsistency_Requirement(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockisConsistency_Requirement {
	mock := &MockisConsistency_Requirement{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
