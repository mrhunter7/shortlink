openapi: 3.0.1

servers:
  - url: http://127.0.0.1:7070/api
    description: Local server
  - url: https://shortlink.best/api
    description: Production server
  - url: https://shortlink.best/mock
    description: Mock server

# Available options: https://github.com/json-schema-faker/json-schema-faker/tree/master/docs#available-options
x-json-schema-faker:
  locale: en
  min-items: 2
  max-items: 5
  resolve-json-path: true
  useExamplesValue: true

info:
  version: 0.1.0
  title: ShortLink API
  description: |
    ShortLink API for managing and retrieving short links.
  contact:
    email: support@shortlink.best
    name: ShortLink repository
    url: https://github.com/shortlink-org/shortlink/issues
  license:
    name: MIT
    url: http://www.opensource.org/licenses/MIT

paths:
  /links:
    get:
      summary: List links
      description: Retrieve a list of all short links with pagination.
      operationId: getLinks
      tags:
        - Link
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/CursorParam'
        - in: query
          name: filter
          schema:
            type: object
            properties:
              createdAt:
                type: string
                format: date-time
                description: Filter links created at a specific date and time.
              urlContains:
                type: string
                description: Filter links containing specific text in the URL.
            additionalProperties: false
          style: form
          explode: true
          description: JSON object used for filtering the results.
      responses:
        '200':
          $ref: '#/components/responses/PaginatedLinksResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Add link
      description: Add a new short link.
      operationId: addLink
      tags:
        - Link
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLink'
      responses:
        '201':
          $ref: '#/components/responses/LinkCreated'
        '400':
          $ref: '#/components/responses/BadRequest'

    put:
      summary: Update links
      description: Update existing links based on a filter. Updates a single link if the 'id' field is specified in the filter.
      operationId: updateLinks
      tags:
        - Link
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  $ref: '#/components/schemas/LinkFilter'
                link:
                  $ref: '#/components/schemas/Link'
      responses:
        '200':
          $ref: '#/components/responses/LinksUpdated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /links/{hash}:
    get:
      summary: Get link
      description: Retrieve a specific link by its hash.
      operationId: getLink
      tags:
        - Link
      parameters:
        - $ref: '#/components/parameters/HashParam'
      responses:
        '200':
          $ref: '#/components/responses/LinkDetails'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete link
      description: Delete a specific link by its hash.
      operationId: deleteLink
      tags:
        - Link
      parameters:
        - $ref: '#/components/parameters/HashParam'
      responses:
        '204':
          $ref: '#/components/responses/LinkDeleted'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  parameters:
    LimitParam:
      in: query
      name: limit
      schema:
        type: integer
        default: 10
      description: The number of links to return per page.

    CursorParam:
      in: query
      name: cursor
      schema:
        type: string
      description: A cursor for use in pagination. This is the ID of the last item in the previous page.

    HashParam:
      name: hash
      in: path
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{32}$'
      description: Unique hash of the link.

  responses:
    PaginatedLinksResponse:
      description: A page of links with pagination details.
      content:
        application/json:
          schema:
            type: object
            properties:
              links:
                type: array
                items:
                  $ref: '#/components/schemas/Link'
              next_cursor:
                type: string
                description: A cursor to be used to fetch the next page of results.
            required:
              - links
              - next_cursor

    LinkCreated:
      description: Link created successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Link'

    LinkDetails:
      description: Details of the link.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Link'

    LinksUpdated:
      description: Links updated successfully.
      content:
        application/json:
          schema:
            type: object
            properties:
              updatedCount:
                type: integer
                description: The number of links updated.

    LinkDeleted:
      description: Link deleted successfully.

    NotFound:
      description: Link not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    BadRequest:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    LinkFilter:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the link. Use this to update a specific link.
        urlContains:
          type: string
          description: Filter links that contain this text in their URL.
      additionalProperties: false

    AddLink:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: The URL of the link.
        describe:
          type: string
          description: Description of the link.
      required:
        - url

    Link:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: The URL of the link.
        hash:
          type: string
          description: Unique hash, used as the short link.
        describe:
          type: string
          description: Description of the link.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the link was created.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the link was last updated.
      required:
        - url
        - hash
        - describe
        - created_at
        - updated_at

    ErrorResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
          description: An array of human-readable messages providing more details about the error.
