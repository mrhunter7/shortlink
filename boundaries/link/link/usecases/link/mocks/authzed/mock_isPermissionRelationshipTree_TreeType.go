// Code generated by mockery v2.36.1. DO NOT EDIT.

package v1

import mock "github.com/stretchr/testify/mock"

// MockisPermissionRelationshipTree_TreeType is an autogenerated mock type for the isPermissionRelationshipTree_TreeType type
type MockisPermissionRelationshipTree_TreeType struct {
	mock.Mock
}

type MockisPermissionRelationshipTree_TreeType_Expecter struct {
	mock *mock.Mock
}

func (_m *MockisPermissionRelationshipTree_TreeType) EXPECT() *MockisPermissionRelationshipTree_TreeType_Expecter {
	return &MockisPermissionRelationshipTree_TreeType_Expecter{mock: &_m.Mock}
}

// isPermissionRelationshipTree_TreeType provides a mock function with given fields:
func (_m *MockisPermissionRelationshipTree_TreeType) isPermissionRelationshipTree_TreeType() {
	_m.Called()
}

// MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isPermissionRelationshipTree_TreeType'
type MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call struct {
	*mock.Call
}

// isPermissionRelationshipTree_TreeType is a helper method to define mock.On call
func (_e *MockisPermissionRelationshipTree_TreeType_Expecter) isPermissionRelationshipTree_TreeType() *MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call {
	return &MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call{Call: _e.mock.On("isPermissionRelationshipTree_TreeType")}
}

func (_c *MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call) Run(run func()) *MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call) Return() *MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call) RunAndReturn(run func()) *MockisPermissionRelationshipTree_TreeType_isPermissionRelationshipTree_TreeType_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockisPermissionRelationshipTree_TreeType creates a new instance of MockisPermissionRelationshipTree_TreeType. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockisPermissionRelationshipTree_TreeType(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockisPermissionRelationshipTree_TreeType {
	mock := &MockisPermissionRelationshipTree_TreeType{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
