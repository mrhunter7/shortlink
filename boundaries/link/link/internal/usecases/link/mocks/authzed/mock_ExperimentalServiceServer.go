// Code generated by mockery v2.36.1. DO NOT EDIT.

package v1

import (
	context "context"

	v1 "github.com/authzed/authzed-go/proto/authzed/api/v1"
	mock "github.com/stretchr/testify/mock"
)

// MockExperimentalServiceServer is an autogenerated mock type for the ExperimentalServiceServer type
type MockExperimentalServiceServer struct {
	mock.Mock
}

type MockExperimentalServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockExperimentalServiceServer) EXPECT() *MockExperimentalServiceServer_Expecter {
	return &MockExperimentalServiceServer_Expecter{mock: &_m.Mock}
}

// BulkCheckPermission provides a mock function with given fields: _a0, _a1
func (_m *MockExperimentalServiceServer) BulkCheckPermission(_a0 context.Context, _a1 *v1.BulkCheckPermissionRequest) (*v1.BulkCheckPermissionResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1.BulkCheckPermissionResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.BulkCheckPermissionRequest) (*v1.BulkCheckPermissionResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *v1.BulkCheckPermissionRequest) *v1.BulkCheckPermissionResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.BulkCheckPermissionResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *v1.BulkCheckPermissionRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockExperimentalServiceServer_BulkCheckPermission_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BulkCheckPermission'
type MockExperimentalServiceServer_BulkCheckPermission_Call struct {
	*mock.Call
}

// BulkCheckPermission is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 *v1.BulkCheckPermissionRequest
func (_e *MockExperimentalServiceServer_Expecter) BulkCheckPermission(_a0 interface{}, _a1 interface{}) *MockExperimentalServiceServer_BulkCheckPermission_Call {
	return &MockExperimentalServiceServer_BulkCheckPermission_Call{Call: _e.mock.On("BulkCheckPermission", _a0, _a1)}
}

func (_c *MockExperimentalServiceServer_BulkCheckPermission_Call) Run(run func(_a0 context.Context, _a1 *v1.BulkCheckPermissionRequest)) *MockExperimentalServiceServer_BulkCheckPermission_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v1.BulkCheckPermissionRequest))
	})
	return _c
}

func (_c *MockExperimentalServiceServer_BulkCheckPermission_Call) Return(_a0 *v1.BulkCheckPermissionResponse, _a1 error) *MockExperimentalServiceServer_BulkCheckPermission_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockExperimentalServiceServer_BulkCheckPermission_Call) RunAndReturn(run func(context.Context, *v1.BulkCheckPermissionRequest) (*v1.BulkCheckPermissionResponse, error)) *MockExperimentalServiceServer_BulkCheckPermission_Call {
	_c.Call.Return(run)
	return _c
}

// BulkExportRelationships provides a mock function with given fields: _a0, _a1
func (_m *MockExperimentalServiceServer) BulkExportRelationships(_a0 *v1.BulkExportRelationshipsRequest, _a1 v1.ExperimentalService_BulkExportRelationshipsServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1.BulkExportRelationshipsRequest, v1.ExperimentalService_BulkExportRelationshipsServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockExperimentalServiceServer_BulkExportRelationships_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BulkExportRelationships'
type MockExperimentalServiceServer_BulkExportRelationships_Call struct {
	*mock.Call
}

// BulkExportRelationships is a helper method to define mock.On call
//   - _a0 *v1.BulkExportRelationshipsRequest
//   - _a1 v1.ExperimentalService_BulkExportRelationshipsServer
func (_e *MockExperimentalServiceServer_Expecter) BulkExportRelationships(_a0 interface{}, _a1 interface{}) *MockExperimentalServiceServer_BulkExportRelationships_Call {
	return &MockExperimentalServiceServer_BulkExportRelationships_Call{Call: _e.mock.On("BulkExportRelationships", _a0, _a1)}
}

func (_c *MockExperimentalServiceServer_BulkExportRelationships_Call) Run(run func(_a0 *v1.BulkExportRelationshipsRequest, _a1 v1.ExperimentalService_BulkExportRelationshipsServer)) *MockExperimentalServiceServer_BulkExportRelationships_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*v1.BulkExportRelationshipsRequest), args[1].(v1.ExperimentalService_BulkExportRelationshipsServer))
	})
	return _c
}

func (_c *MockExperimentalServiceServer_BulkExportRelationships_Call) Return(_a0 error) *MockExperimentalServiceServer_BulkExportRelationships_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockExperimentalServiceServer_BulkExportRelationships_Call) RunAndReturn(run func(*v1.BulkExportRelationshipsRequest, v1.ExperimentalService_BulkExportRelationshipsServer) error) *MockExperimentalServiceServer_BulkExportRelationships_Call {
	_c.Call.Return(run)
	return _c
}

// BulkImportRelationships provides a mock function with given fields: _a0
func (_m *MockExperimentalServiceServer) BulkImportRelationships(_a0 v1.ExperimentalService_BulkImportRelationshipsServer) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(v1.ExperimentalService_BulkImportRelationshipsServer) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockExperimentalServiceServer_BulkImportRelationships_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BulkImportRelationships'
type MockExperimentalServiceServer_BulkImportRelationships_Call struct {
	*mock.Call
}

// BulkImportRelationships is a helper method to define mock.On call
//   - _a0 v1.ExperimentalService_BulkImportRelationshipsServer
func (_e *MockExperimentalServiceServer_Expecter) BulkImportRelationships(_a0 interface{}) *MockExperimentalServiceServer_BulkImportRelationships_Call {
	return &MockExperimentalServiceServer_BulkImportRelationships_Call{Call: _e.mock.On("BulkImportRelationships", _a0)}
}

func (_c *MockExperimentalServiceServer_BulkImportRelationships_Call) Run(run func(_a0 v1.ExperimentalService_BulkImportRelationshipsServer)) *MockExperimentalServiceServer_BulkImportRelationships_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(v1.ExperimentalService_BulkImportRelationshipsServer))
	})
	return _c
}

func (_c *MockExperimentalServiceServer_BulkImportRelationships_Call) Return(_a0 error) *MockExperimentalServiceServer_BulkImportRelationships_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockExperimentalServiceServer_BulkImportRelationships_Call) RunAndReturn(run func(v1.ExperimentalService_BulkImportRelationshipsServer) error) *MockExperimentalServiceServer_BulkImportRelationships_Call {
	_c.Call.Return(run)
	return _c
}

// mustEmbedUnimplementedExperimentalServiceServer provides a mock function with given fields:
func (_m *MockExperimentalServiceServer) mustEmbedUnimplementedExperimentalServiceServer() {
	_m.Called()
}

// MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedExperimentalServiceServer'
type MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedExperimentalServiceServer is a helper method to define mock.On call
func (_e *MockExperimentalServiceServer_Expecter) mustEmbedUnimplementedExperimentalServiceServer() *MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call {
	return &MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedExperimentalServiceServer")}
}

func (_c *MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call) Run(run func()) *MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call) Return() *MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call) RunAndReturn(run func()) *MockExperimentalServiceServer_mustEmbedUnimplementedExperimentalServiceServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockExperimentalServiceServer creates a new instance of MockExperimentalServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockExperimentalServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockExperimentalServiceServer {
	mock := &MockExperimentalServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
