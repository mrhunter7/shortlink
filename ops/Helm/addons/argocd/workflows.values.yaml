argo-workflows:
  enabled: true

  fullnameOverride: argo-workflows

  controller:
    metricsConfig:
      enabled: true
    telemetryConfig:
      enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus-operator

    workflowNamespaces: []

    # -- enable persistence using postgres
    # postgresql:
    #  host: localhost
    #  port: 5432
    #  database: argo
    #  tableName: argo_workflows

    logging:
      format: "json"

    resources:
      limits:
        cpu: 1000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi

  server:
    extraArgs:
      - --basehref
      - /workflows/
      - --auth-mode=sso

    baseHref: /workflows/

    extraEnv:
      - name: ARGO_BASE_HREF
        value: /workflows

    ingress:
      enabled: true

      ingressClassName: nginx

      annotations:
        cert-manager.io/cluster-issuer: cert-manager-production
        nginx.ingress.kubernetes.io/backend-protocol: HTTP
        nginx.ingress.kubernetes.io/enable-modsecurity: "false"
        nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
        nginx.ingress.kubernetes.io/enable-opentelemetry: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/use-regex: "true"

      hosts:
        - argo.shortlink.best

      paths:
        - /workflows/?(.*)

      tls:
        - secretName: argo-ingress-tls
          hosts:
            - argo.shortlink.best

    logging:
      format: "json"

    sso:
      enabled: true
      issuer: https://argo.shortlink.best/api/dex
      sessionExpiry: 240h
      rbac:
        enabled: true
      scopes:
        - groups
      clientId:
        name: argo-workflows-sso
        key: client-id
      clientSecret:
        name: argo-workflows-sso
        key: client-secret
      redirectUrl: https://workflows.shortlink.best/oauth2/callback
