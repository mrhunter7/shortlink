apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: dual-role
  labels:
    strimzi.io/cluster: shortlink
spec:
  replicas: 3
  roles:
    - controller
    - broker
  storage:
    type: ephemeral

---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: shortlink
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: 3.6.1
    metadataVersion: 3.6-IV2
    # The replicas field is required by the Kafka CRD schema while the KafkaNodePools feature gate is in alpha phase.
    # But it will be ignored when Kafka Node Pools are used
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
        #configuration:
        #  useServiceDnsDomain: true
      - name: tls
        port: 9093
        type: internal
        tls: true
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.6"
    # The storage field is required by the Kafka CRD schema while the KafkaNodePools feature gate is in alpha phase.
    # But it will be ignored when Kafka Node Pools are used
    storage:
      type: ephemeral
    resources:
      requests:
        memory: 100Mi
        cpu: 50m
      limits:
        memory: 2Gi
        cpu: 1000m
    # metricsConfig:
    #  type: jmxPrometheusExporter
    #  valueFrom:
    #    configMapKeyRef:
    #      name: kafka-metrics
    #      key: kafka-metrics-config.yml
  # The storage field is required by the Kafka CRD schema while the KafkaNodePools feature gate is in alpha phase.
  # But it will be ignored when Kafka Node Pools are used
  # zookeeper:
  #   replicas: 3
  #   storage:
  #     type: ephemeral
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
    enableSaramaLogging: true
  cruiseControl:
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: cruise-control-metrics
          key: metrics-config.yml
