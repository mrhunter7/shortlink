tempo:
  enabled: true

  tempoQuery:
    enabled: true

  tempo:
    reportingEnabled: false

    resources:
      limits:
        cpu: 2000m
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 128Mi

    metricsGenerator:
      enabled: enable
      remoteWriteUrl: http://prometheus-prometheus.prometheus-operator:9090/api/v1/write

    ingester:
      trace_idle_period: 10s               # the length of time after a trace has not received spans to consider it complete and flush it
      max_block_bytes: 500_000_000         # cut the head block when it hits this size or ...
      max_block_duration: 30m              # this much time passes

    querier:
      max_concurrent_queries: 100
      search:
        prefer_self: 50   # only if you're using external endpoints

    query_frontend:
      max_outstanding_per_tenant: 2000
      search:
        concurrent_jobs: 2000
        target_bytes_per_job: 400_000_000

    storage:
      trace:
        backend: local
        block:
          version: vParquet3               # version of the block storage to use
          bloom_filter_false_positive: .05 # bloom filter false positive rate.  lower values create larger filters but fewer false positives
          v2_index_downsample_bytes: 1000  # number of bytes per index record
          v2_encoding: zstd                # block encoding/compression.  options: none, gzip, lz4-64k, lz4-256k, lz4-1M, lz4, snappy, zstd

          parquet_dedicated_columns:
            - scope: span
              name: rpc.service
              type: string
        local:
          path: /var/tempo/traces
        wal:
          path: /var/tempo/wal
        pool:
          max_workers: 400                 # the worker pool mainly drives querying, but is also used for polling the blocklist
          queue_depth: 30000

  serviceMonitor:
    enabled: true

    labels:
      release: prometheus-operator

  persistence:
    enabled: true
    storageClassName: local-path
    size: 10Gi
