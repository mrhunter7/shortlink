loki:
  enabled: true

  global:
    dnsService: kube-dns

  nameOverride: grafana-loki

  loki:
    auth_enabled: false

    commonConfig:
      replication_factor: 1

    storage:
      type: filesystem

  test:
    enabled: false

  write:
    replicas: 1

    persistence:
      storageClass: local-path

    resources:
      limits:
        cpu: 300m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi

  read:
    replicas: 1

    persistence:
      storageClass: local-path

    resources:
      limits:
        cpu: 300m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi

  singleBinary:
    replicas: 1

    persistence:
      storageClass: local-path

    resources:
      limits:
        cpu: 300m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi

# TODO: research this configuration
#  schemaConfig:
#    configs:
#      - from: 2022-11-30
#        store: tsdb
#        object_store: filesystem
#        schema: v12
#        index:
#          prefix: tsdb_index_
#          period: 24h

# TODO: research this configuration
#  tableManager:
#    enabled: true
#    retention_deletes_enabled: true
#    retention_period: 240h

# TODO: research this configuration
#  compactor:
#    shared_store: filesystem
#    working_directory: /data/loki/boltdb-shipper-compactor
#    retention_enabled: true
#    retention_delete_delay: 30m

  monitoring:
    dashboards:
      enabled: true
      annotations:
        grafana_dashboard_folder: Loki

    serviceMonitor:
      labels:
        release: prometheus-operator

    selfMonitoring:
      grafanaAgent:
        installOperator: false

    rules:
      enabled: true
      additionalGroups:
        - name: additional-loki-rules
          rules:
            - record: job:loki_request_duration_seconds_bucket:sum_rate
              expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
            - record: job_route:loki_request_duration_seconds_bucket:sum_rate
              expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
            - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
              expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)

  lokiCanary:
    enabled: false

  gateway:
    resources:
      limits:
        cpu: 300m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi

  sidecar:
    resources:
      limits:
        cpu: 300m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi

  backend:
    resources:
      limits:
        cpu: 300m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi

  tracing:
    jaegerAgentHost: grafana-tempo.grafana:6831
